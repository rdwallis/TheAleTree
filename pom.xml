<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- The Basics -->
	<groupId>com.wallissoftware.ale</groupId>
	<artifactId>AleTree</artifactId>
	<version>1.0</version>

	<packaging>war</packaging>

	<name>thealetree</name>

	<scm>
		<url>https://github.com/rdwallis/TheAleTree</url>
	</scm>

	<repositories>
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>htmleasy</id>
			<url>http://htmleasy-maven.googlecode.com/svn/trunk/</url>
		</repository>
		<repository>
			<id>scala-tools</id>
			<url>http://scala-tools.org/repo-releases</url>
		</repository>
	</repositories>

	<dependencies>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>0.11.6</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.htmleasy</groupId>
			<artifactId>htmleasy</artifactId>
			<version>0.7</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>13.0.1</version>
		</dependency>

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
		</dependency>

		<!-- J2EE Servlet API. We need it to compile IndexServlet class. You can probably remove it, if you don't explicitly use Servlets. -->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.googlecode.objectify</groupId>
			<artifactId>objectify</artifactId>
			<version>4.0b1</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-user</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>3.0</version>
		</dependency>

		<!-- Make use of JSP tags. Remove, if you don't use JSPs. -->
		<dependency>
			<artifactId>standard</artifactId>
			<groupId>taglibs</groupId>
			<version>1.1.2</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>

		<!-- These dependencies are here just for enabling logging. -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> <version>1.6.0</version> </dependency> -->

		<!-- Test scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>

		<!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- RestEasy -->
		<!-- core library -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>2.3.5.Final</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>2.3.5.Final</version>
		</dependency>

		<!-- Guice integration -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-guice</artifactId>
			<version>2.3.5.Final</version>
		</dependency>
		
		<!-- Apache Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>

		<dependency>
			<groupId>org.markdownj</groupId>
			<artifactId>markdownj</artifactId>
			<version>0.3.0-1.0.2b4</version>
		</dependency>

		<dependency>
			<groupId>org.ocpsoft.prettytime</groupId>
			<artifactId>prettytime</artifactId>
			<version>1.0.8.Final</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-web</artifactId>
			<version>2.0.4</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.6.4</version>
		</dependency>

		<dependency>
			<groupId>org.horrabin</groupId>
			<artifactId>horrorss</artifactId>
			<version>2.2.0</version>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.sparta-xml</groupId>
			<artifactId>sparta</artifactId>
			<version>1</version>
		</dependency>

	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.archetype</groupId>
				<artifactId>archetype-packaging</artifactId>
				<version>2.0-alpha-5</version>
			</extension>
		</extensions>

		<plugins>
			<plugin>
				<artifactId>maven-archetype-plugin</artifactId>
				<version>2.0-alpha-4</version>
				<extensions>true</extensions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn gae:deploy" to upload to GAE. -->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.9.4</version>
				<configuration>
					<serverId>appengine.google.com</serverId>
				</configuration>
			</plugin>

			<!-- Upload application to the appspot automatically, during release:perform. -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<!-- Specify hard-coded project properties here. -->
	<properties>

		<!-- Sets the project's default encoding. http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- This is just for "eclipse:eclipse" goal to always attempt downloading sources. -->
		<downloadSources>true</downloadSources>

		<!-- Specify AppEngine version for your project. It should match SDK version pointed to by ${gae.home} property (Typically, one used by your Eclipse plug-in). -->
		<gae.version>1.7.4</gae.version>

		<!-- Upload to http://test.latest.<applicationName>.appspot.com by default. -->
		<gae.application.version>1</gae.application.version>

		<github.global.server>github</github.global.server>
	</properties>

	<profiles>
		<!-- We can configure our integration server to activate this profile and perform gae:deploy, thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com automatically. -->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!-- This profile will activate automatically during release and upload application to the http://2.latest.<applicationName>.appspot.com (We might want to set the 2nd version as our 
			applications Default version to be accessible at http://<applicationName>.appspot.com). -->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!-- During release, set application version in appengine-web.xml to 2. -->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
	</profiles>

</project>
